version: 3

output: prefixed

vars:
  # colors
  GREEN: $(tput setaf 2)
  RED: $(tput setaf 1)
  BLUE: $(tput setaf 31)
  NC: $(tput sgr0)

  # Paths
  SELF_DIR: $(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
  CHEZMOIROOT: "{{.SELF_DIR}}/$(cat .chezmoiroot)"
  BREWFILE_PATH: "{{.CHEZMOIROOT}}/dot_core/brew/Brewfile"
  TEMP_PATH: "{{.HOME}}/.core/temp"
  ZSH_CUSTOM_PATH: "{{.HOME}}/.core/zsh"
  SCRIPTS_PATH: "{{.CHEZMOIROOT}}/dot_core/scripts"

tasks:
  init:
    - cmd: |
        echo "{{.GREEN}}Initializing temp dir {{.TEMP_PATH}}{{.NC}}"
        mkdir -p {{.TEMP_PATH}}
    - task: brew:make-temp-brewfiles
    - task: brew:tap
    - task: brew:install:core
    - task: oh-my-zsh-init
    - task: brew:install:formula
    - task: rye:install
    - task: nvchad:install
    - task: brew:install:cask
    - task: chezmoi
    - task: rust:install
    - task: vscode:install-extensions
    - task: macos:install-defaults
    - task: crontab:restore
    - defer: rm -rf {{.TEMP_PATH}}

  brew:update:
    desc: Run Brew Update
    cmds:
      - brew update

  brew:make-temp-brewfiles:
    desc: build temp directory where we will make different brewfiles for taps, formulas, and cask
    cmds:
      - (grep '^[tap]' < {{.BREWFILE_PATH}}) > {{.TEMP_PATH}}/taps.brewfile
      - (grep '^[brew]' < {{.BREWFILE_PATH}}) > {{.TEMP_PATH}}/formula.brewfile
      - |
        if [[ $CI == 1 ]]; then
          (grep '^[cask]' < {{.BREWFILE_PATH}} | grep -v 'mactex') > {{.TEMP_PATH}}/cask.brewfile
        else
          (grep '^[cask]' < {{.BREWFILE_PATH}}) > {{.TEMP_PATH}}/cask.brewfile
        fi

  brew:tap:
    desc: "Install brew taps"
    deps: [brew:update]
    cmds:
      - brew bundle --file={{.TEMP_PATH}}/taps.brewfile
    env:
      HOMEBREW_UPDATE_PREINSTALL: 0

  brew:install:core:
    desc: "Install brew core packages defined in BREW_CORE_INSTALLS variable"
    cmds:
      - brew install python@3.9
      - brew install python@3.11
    env:
      HOMEBREW_UPDATE_PREINSTALL: 0

  brew:install:formula:
    desc: "Install brew formulas defined on the Brewfile"
    deps: [brew:update]
    cmds:
      - brew bundle --file={{.TEMP_PATH}}/formula.brewfile || true
    ignore_error: true
    env:
      HOMEBREW_UPDATE_PREINSTALL: 0

  brew:install:cask:
    desc: "Install brew cask defined on the Brewfile"
    deps: [brew:update]
    cmds:
      - brew bundle --file={{.TEMP_PATH}}/cask.brewfile
    interactive: true
    env:
      HOMEBREW_UPDATE_PREINSTALL: 0

  rye:install:
    desc: "Install Rye"
    cmds:
      - curl -sSf https://rye-up.com/get | RYE_VERSION="0.4.0" RYE_INSTALL_OPTION="--yes" bash

  rust:install:
    desc: "Install Rust"
    cmds:
      - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

  nvchad:install:
    desc: "Install NvChad"
    cmds:
      - git clone https://github.com/NvChad/NvChad ~/.config/nvim --depth 1

  oh-my-zsh-init:
    desc: "Initialize oh-my-zsh"
    cmds:
      - |
        if [ ! -d "{{.HOME}}/.oh-my-zsh" ]; then
          sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
        fi

  chezmoi:
    desc: Apply chezmoi dotfiles
    cmds:
      - chezmoi apply

  vscode:install-extensions:
    desc: install extensions of vscode
    cmds:
      - chmod +x {{.SCRIPTS_PATH}}/executable_install-vscode-extensions.sh
      - mkdir -p {{.HOME}}/.vscode/extensions
      - bash {{.SCRIPTS_PATH}}/executable_install-vscode-extensions.sh

  macos:install-defaults:
    desc: install defaults configs
    cmds:
      - |
        if [[ {{OS}} == "darwin" ]]; then
          chmod +x {{.SCRIPTS_PATH}}/executable_dot_macos
          bash {{.SCRIPTS_PATH}}/executable_dot_macos
        else
          echo "{{.RED}} Not macos {{.NC}} -> Skipping apply macos defaults"
        fi

  crontab:restore:
    desc: "Restore crontab file from backup"
    cmds:
      - crontab < {{.HOME}}/.core/scripts/crontab.save
